[{"D:\\shiva\\PATTERN\\Employee_Payroll_React_App\\payroll_app\\src\\index.js":"1","D:\\shiva\\PATTERN\\Employee_Payroll_React_App\\payroll_app\\src\\App.js":"2","D:\\shiva\\PATTERN\\Employee_Payroll_React_App\\payroll_app\\src\\reportWebVitals.js":"3","D:\\shiva\\PATTERN\\Employee_Payroll_React_App\\payroll_app\\src\\Components\\CreateEmployeeListComponent.jsx":"4","D:\\shiva\\PATTERN\\Employee_Payroll_React_App\\payroll_app\\src\\Components\\HeaderComponent.jsx":"5","D:\\shiva\\PATTERN\\Employee_Payroll_React_App\\payroll_app\\src\\Components\\AddEmployeeComponent.jsx":"6","D:\\shiva\\PATTERN\\Employee_Payroll_React_App\\payroll_app\\src\\Components\\UpdateEmployeeComponent.jsx":"7","D:\\shiva\\PATTERN\\Employee_Payroll_React_App\\payroll_app\\src\\Services\\EmployeeService.js":"8","D:\\shiva\\PATTERN\\Employee_Payroll_React_App\\payroll_app\\src\\Services\\utility.js":"9","D:\\shiva\\PATTERN\\Employee_Payroll_React_App\\payroll_app\\src\\Components\\DepartmentComponent.jsx":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":895,"mtime":1608287608218,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":3644,"mtime":1608838820681,"results":"15","hashOfConfig":"12"},{"size":664,"mtime":1608288270802,"results":"16","hashOfConfig":"12"},{"size":16807,"mtime":1608851652425,"results":"17","hashOfConfig":"12"},{"size":15093,"mtime":1608978076258,"results":"18","hashOfConfig":"12"},{"size":659,"mtime":1608284417587,"results":"19","hashOfConfig":"12"},{"size":282,"mtime":1608267286080,"results":"20","hashOfConfig":"12"},{"size":242,"mtime":1608371614003,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"dkpzjh",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\shiva\\PATTERN\\Employee_Payroll_React_App\\payroll_app\\src\\index.js",[],["46","47"],"D:\\shiva\\PATTERN\\Employee_Payroll_React_App\\payroll_app\\src\\App.js",["48"],"import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport CreateEmployeeListComponent from './Components/CreateEmployeeListComponent';\nimport HeaderComponent from './Components/HeaderComponent';\nimport AddEmployeeComponent from './Components/AddEmployeeComponent';\nimport UpdateEmployeeComponent from './Components/UpdateEmployeeComponent';\n\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n          <HeaderComponent />\n          <div>\n            <Switch>\n              <Route path = \"/\" exact component = {CreateEmployeeListComponent}></Route>\n              <Route path = \"/create\" component = {AddEmployeeComponent}></Route>\n              <Route path = \"/update/:id\" component = {UpdateEmployeeComponent}></Route>\n            </Switch>\n          </div>\n      </Router>   \n    </div>\n  );\n}\n\nexport default App;\n","D:\\shiva\\PATTERN\\Employee_Payroll_React_App\\payroll_app\\src\\reportWebVitals.js",[],"D:\\shiva\\PATTERN\\Employee_Payroll_React_App\\payroll_app\\src\\Components\\CreateEmployeeListComponent.jsx",["49","50"],"import React, { Component } from 'react';\r\nimport EmployeeService from '../Services/EmployeeService';\r\nimport utility from '../Services/utility';\r\nimport DepartmentComponent from './DepartmentComponent';\r\n\r\n\r\nclass CreateEmployeeListComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            employees: []\r\n        }\r\n        this.addEmployee = this.addEmployee.bind(this);\r\n        this.updateEmployee = this.updateEmployee.bind(this);\r\n        this.deleteEmployee = this.deleteEmployee.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        EmployeeService.getEmployees().then((res) => {\r\n            console.log(res.data.data)\r\n            this.setState({ employees: res.data.data }\r\n             )\r\n        });\r\n        \r\n    }\r\n    addEmployee() {\r\n        this.props.history.push('/create');\r\n    }\r\n    updateEmployee(id) {\r\n        this.props.history.push(`/update/${id}`);\r\n    }\r\n\r\n    deleteEmployee(id) {\r\n        EmployeeService.deleteEmployee(id).then(res => {\r\n            this.setState({\r\n                employees: this.state.employees.filter(employee => employee.id !== id)\r\n            });\r\n        });\r\n    }\r\n   \r\n    render() {\r\n        function NumberList(props) {\r\n            const numbers = props.numbers;\r\n            const listItems = numbers.map((number) =>\r\n              <div class=\"dept-label\" >\r\n                {number }\r\n              </div>\r\n            );\r\n            return (\r\n              <div>{listItems}</div>\r\n            );\r\n          }\r\n          \r\n        return (\r\n            <div>\r\n                <div class=\"main-content\">\r\n                    <div class=\"header-content\">\r\n                        <div class=\"emp-detail-text\">Employee Details<span>&nbsp;</span>\r\n                            <div class=\"emp-count\">{this.state.employees.length}</div>\r\n                        </div>\r\n                        <button onClick={this.addEmployee} class=\"add-button\">\r\n                            <img src=\"../assets/add-24px.svg\" alt=\"\" />Add User</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"table-main\">\r\n                    <table class=\"table\" id=\"display\">\r\n                        <tr><th>Name</th><th>Gender</th><th>Department</th><th>Salary</th><th>StartDate</th><th>Actions</th></tr>\r\n                        {\r\n                            this.state.employees.map(\r\n                                (employee) =>\r\n                                    <tr key={employee.id}>\r\n                                        <td>{employee.name}</td>\r\n                                        <td>{employee.gender}</td>\r\n                                        <td>\r\n                                        <NumberList numbers={employee.department} />\r\n\r\n                                        </td>\r\n                                      \r\n                                        <td>{employee.salary}</td>\r\n                                        <td>{utility.stringifyDate(employee.startDate)}</td>\r\n                                        <td>\r\n                                            <img src=\"../assets/create-black-18dp.svg\" onClick={() => this.updateEmployee(employee.id)} alt=\"edit\" />\r\n                                            <img src=\"../assets/delete-black-18dp.svg\" onClick={() => this.deleteEmployee(employee.id)}/>\r\n                                        </td>\r\n                                    </tr>)\r\n                        }\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateEmployeeListComponent;","D:\\shiva\\PATTERN\\Employee_Payroll_React_App\\payroll_app\\src\\Components\\HeaderComponent.jsx",[],"D:\\shiva\\PATTERN\\Employee_Payroll_React_App\\payroll_app\\src\\Components\\AddEmployeeComponent.jsx",["51","52","53","54","55","56","57"],"import React, { Component } from 'react';\r\nimport EmployeeService from'../Services/EmployeeService';\r\n\r\nclass AddEmployeeComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            salary: '400000',\r\n            gender: '',\r\n            startDate: '',\r\n            note: '',\r\n            department: [{\r\n                deptName:'HR',\r\n                isChecked:false\r\n            },\r\n            {\r\n                deptName:'Sales',\r\n                isChecked:false\r\n            },{\r\n                deptName:'Engineer',\r\n                isChecked:false\r\n            },{\r\n                deptName:'Finance',\r\n                isChecked:false\r\n            },{\r\n                deptName:'Others',\r\n                isChecked:false\r\n            }],\r\n            day:'',\r\n            month:'',\r\n            year:'',\r\n            error:{\r\n                nameError:'',\r\n                genderError:'',\r\n                departmentError:'',\r\n                noteError:'',\r\n                dateError:''\r\n        },\r\n        initialerror:{\r\n            nameError:'',\r\n                genderError:'',\r\n                departmentError:'',\r\n                noteError:'',\r\n                dateError:''\r\n        }\r\n            \r\n            \r\n        }\r\n\r\n        this.changeNameHandler = this.changeNameHandler.bind(this);\r\n        this.changeSalaryHandler = this.changeSalaryHandler.bind(this);\r\n        this.changeGenderHandler = this.changeGenderHandler.bind(this);\r\n        this.changeNoteHandler = this.changeNoteHandler.bind(this);\r\n        this.changeDayHandler = this.changeDayHandler.bind(this);\r\n        this.changeMonthHandler = this.changeMonthHandler.bind(this);\r\n        this.changeYearHandler = this.changeYearHandler.bind(this);\r\n        this.changeDepartmentHandler = this.changeDepartmentHandler.bind(this);\r\n        \r\n\r\n        this.saveEmployee = this.saveEmployee.bind(this);\r\n\r\n    }\r\n    changeNameHandler = (event) => {\r\n        const nameRegex = RegExp('^[A-Z]{1}[a-zA-Z\\\\s]{2,}$');\r\n        if (!nameRegex.test(event.target.value) && event.target.value !== '') {\r\n            let checkedError = this.state.error\r\n            checkedError.nameError = 'Name is Invalid'\r\n            console.log(checkedError)\r\n            this.setState({ error: checkedError});\r\n            console.log(this.state.error)\r\n        }\r\n        else{\r\n            let checkedError = this.state.error\r\n            checkedError.nameError = ''\r\n            console.log(checkedError)\r\n            this.setState({ error: checkedError});\r\n\r\n        }\r\n        this.setState({ name: event.target.value });\r\n       \r\n    }\r\n    changeSalaryHandler = (event) => {\r\n        this.setState({ salary: event.target.value });\r\n    }\r\n    changeGenderHandler = (event) => {\r\n        this.setState({ gender: event.target.value });\r\n    }\r\n    changeNoteHandler = (event) => {\r\n        this.setState({ note: event.target.value });\r\n    }\r\n    changeDayHandler = (event) => {\r\n        this.setState({ day: event.target.value });\r\n    }\r\n    changeMonthHandler = (event) =>{\r\n        this.setState({month: event.target.value});\r\n    }\r\n    changeYearHandler = (event) => {\r\n        this.setState({year: event.target.value});\r\n    }\r\n    changeDepartmentHandler = (event) => {\r\n        let index = this.state.department.findIndex(dept => dept.deptName == event.target.name)\r\n        let checkedDepartment = [...this.state.department]\r\n        checkedDepartment[index] = {...checkedDepartment[index],isChecked:!checkedDepartment[index].isChecked}\r\n        this.setState({department:checkedDepartment})\r\n       \r\n        // let checkedDepartment = this.state.department.filter(dept => dept.deptName !== event.target.name)\r\n        // let dept = {\r\n        //     deptName:event.target.name,\r\n        //     isChecked:!this.state.department.filter(dept => dept.deptName == event.target.name).isChecked\r\n        // }\r\n        // checkedDepartment.push(dept)\r\n        // console.log(dept)\r\n        // this.setState({department:dept['HR'].isChecked:!dept['HR'].isChecked})\r\n        // console.log(this.state.department)\r\n    }\r\n           \r\n    // changeHRHandler = (event) => {\r\n    //     this.setState({...department,HR = {\r\n    //         deptName:'HR',\r\n    //         ischecked:!ischecked\r\n    //     }})\r\n    // }\r\n    // changeSalesHandler = (event) => {\r\n    //     this.setState({...department,Sales = {\r\n    //         deptName:'Sales',\r\n    //         ischecked:!ischecked\r\n    //     }})\r\n    // }\r\n    // changeFinanceHandler = (event) => {\r\n    //     this.setState({...department,Finance = {\r\n    //         deptName:'Finance',\r\n    //         ischecked:!ischecked\r\n    //     }})\r\n    // }\r\n    // changeEngineerHandler = (event) => {\r\n    //     this.setState({...department,Engineer = {\r\n    //         deptName:'Engineer',\r\n    //         ischecked:!ischecked\r\n    //     }})\r\n    // }\r\n    // changeOthersHandler = (event) => {\r\n    //     this.setState({...department,Others = {\r\n    //         deptName:'Others',\r\n    //         ischecked:!ischecked\r\n    //     }})\r\n    // }\r\n\r\n    saveEmployee = (event) => {\r\n        event.preventDefault();\r\n        let employee = {\r\n            name: this.state.name,\r\n            salary: this.state.salary,\r\n            gender: this.state.gender,\r\n            note: this.state.note,\r\n            department: this.state.department.filter(dept=> dept.isChecked==true).map(dept=>dept.deptName),\r\n            startDate: this.state.day + ' ' + this.state.month + ' ' + this.state.year\r\n        };\r\n        let flag = false\r\n        console.log(JSON.stringify(employee));\r\n        if(this.state.error.nameError !== ''){\r\n            flag = true\r\n        }\r\n        if(employee.gender.length < 4){\r\n            let checkedError = this.state.error\r\n            checkedError.genderError = 'Gender must be selected'\r\n            this.setState({error: checkedError})\r\n            flag = true\r\n        }\r\n        if(this.state.department.length == 0){\r\n            console.log(this.state.department.length)\r\n            let checkedError = this.state.error\r\n            checkedError.genderError = 'One department must be selected'\r\n            this.setState({error: checkedError})\r\n            flag = true\r\n        }\r\n        if(this.state.note == ''){\r\n            let checkedError = this.state.error\r\n            checkedError.noteError = 'Notes cannot be blank'\r\n            this.setState({error: checkedError})\r\n            flag = true\r\n        }\r\n        if(this.state.day == 'Day' || this.state.month == 'Month' || this.state.year == 'Year'){\r\n            let checkedError = this.state.error\r\n            checkedError.dateError = 'Date Cannot be Empty'\r\n            this.setState({error: checkedError})\r\n            flag = true\r\n        }\r\n        if(!flag){\r\n            EmployeeService.addEmployee(employee).then(res =>{\r\n                this.props.history.push('/')\r\n            })\r\n        }\r\n    }\r\n    reset = () => {\r\n        this.setState({\r\n            name: '',\r\n            salary: '',\r\n            note: '',\r\n            gender: '',\r\n            department: '',\r\n            day:'',\r\n            month:'',\r\n            year:''\r\n        })\r\n    }\r\n    cancel = () =>\r\n    {\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"form-content\" id=\"formId\">\r\n                    <form class=\"form\">\r\n                        <div class=\"form-head\">Employee Payroll Form</div>\r\n                        <div class=\"row-content\">\r\n                            <label class=\"label text\" htmlFor=\"name\">Name</label>\r\n                            <input class=\"input\" id=\"name\" name=\"name\"\r\n                                placeholder=\"Enter your name\" required onChange={this.changeNameHandler}/>\r\n                            <error-output class=\"text-error\" htmlFor=\"name\">{this.state.error.nameError}</error-output>\r\n                        </div>\r\n                        <div class=\"row-content\">\r\n                            <label class=\"label text\" htmlFor=\"gender\">Gender</label>\r\n                            <div onClick={this.changeGenderHandler}>\r\n                                <input type=\"radio\" id=\"male\" name=\"gender\" value=\"Male\" />\r\n                                <label class=\"text\" htmlFor=\"male\">Male</label>\r\n                                <input type=\"radio\" id=\"female\" name=\"gender\" value=\"Female\" />\r\n                                <label class=\"text\" htmlFor=\"female\">Female</label>\r\n                                <error-output class=\"text-error\" htmlFor=\"gender\">{this.state.error.genderError}</error-output>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row-content\">\r\n                            <label class=\"label text\" htmlFor=\"department\">Department</label>\r\n                                {\r\n                                    this.state.department.map(dept =>\r\n                                        <div>\r\n<input class=\"checkbox\" type=\"checkbox\"  name={dept.deptName} checked={dept.isChecked} value={dept.deptName} onChange={this.changeDepartmentHandler}/>\r\n                                <label class=\"text\" htmlFor={dept.deptName}>{dept.deptName}</label>\r\n                                </div>\r\n                                        )\r\n                                }\r\n                                 <error-output class=\"text-error\" htmlFor=\"department\">{this.state.error.departmentError}</error-output>\r\n                                \r\n                                {/* <input class=\"checkbox\" type=\"checkbox\" id=\"sales\" name=\"department\" value=\"Sales\" onChange={this.changeSalesHandler}/>\r\n                                <label class=\"text\" htmlFor=\"sales\">Sales</label>\r\n                                <input class=\"checkbox\" type=\"checkbox\" id=\"finance\" name=\"department\" value=\"Finance\" onChange={this.changeFinanceHandler}/>\r\n                                <label class=\"text\" htmlFor=\"finance\">Finance</label>\r\n                                <input class=\"checkbox\" type=\"checkbox\" id=\"engineer\" name=\"department\" value=\"Engineer\" onChange={this.changeEngineerHandler}/>\r\n                                <label class=\"text\" htmlFor=\"engineer\">Engineer</label>\r\n                                <input class=\"checkbox\" type=\"checkbox\" id=\"others\" name=\"department\" value=\"Others\" onChange={this.changeOthersHandler}/>\r\n                                <label class=\"text\" htmlFor=\"others\">Others</label> */}\r\n                            \r\n                        </div>\r\n                        <div className=\"row-content\">\r\n                            <label className=\"label text\" htmlFor=\"salary\">Choose your salary:</label>\r\n                            <input className=\"slider\" type=\"range\" min=\"300000\" max=\"500000\" step=\"100\"\r\n                                name=\"salary\" id=\"salary\" defaultValue=\"400000\" onChange = {this.changeSalaryHandler}/>\r\n                            <output className=\"salary-output text\" htmlFor=\"salary\">{this.state.salary}</output>\r\n                        </div>\r\n                        <div class=\"row-content\">\r\n                            <label class=\"label text\" htmlFor=\"startDate\">StartDate</label>\r\n                            <div id=\"date\">\r\n                                <select id=\"day\" name=\"Day\" onChange={this.changeDayHandler}>\r\n                                    <option selected>Day</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"4\">4</option>\r\n                                    <option value=\"5\">5</option>\r\n                                    <option value=\"6\">6</option>\r\n                                    <option value=\"7\">7</option>\r\n                                    <option value=\"8\">8</option>\r\n                                    <option value=\"9\">9</option>\r\n                                    <option value=\"10\">10</option>\r\n                                    <option value=\"11\">11</option>\r\n                                    <option value=\"12\">12</option>\r\n                                    <option value=\"13\">13</option>\r\n                                    <option value=\"14\">14</option>\r\n                                    <option value=\"15\">15</option>\r\n                                    <option value=\"16\">16</option>\r\n                                    <option value=\"17\">17</option>\r\n                                    <option value=\"18\">18</option>\r\n                                    <option value=\"19\">19</option>\r\n                                    <option value=\"20\">20</option>\r\n                                    <option value=\"21\">21</option>\r\n                                    <option value=\"22\">22</option>\r\n                                    <option value=\"23\">23</option>\r\n                                    <option value=\"24\">24</option>\r\n                                    <option value=\"25\">25</option>\r\n                                    <option value=\"26\">26</option>\r\n                                    <option value=\"27\">27</option>\r\n                                    <option value=\"28\">28</option>\r\n                                    <option value=\"29\">29</option>\r\n                                    <option value=\"30\">30</option>\r\n                                    <option value=\"31\">31</option>\r\n                                </select>\r\n                                <select id=\"month\" name=\"Month\" onChange={this.changeMonthHandler}>\r\n                                    <option selected>Month</option>\r\n                                    <option value=\"Jan\">January</option>\r\n                                    <option value=\"Feb\">February</option>\r\n                                    <option value=\"Mar\">March</option>\r\n                                    <option value=\"Apr\">April</option>\r\n                                    <option value=\"May\">May</option>\r\n                                    <option value=\"Jun\">June</option>\r\n                                    <option value=\"Jul\">July</option>\r\n                                    <option value=\"Aug\">August</option>\r\n                                    <option value=\"Sep\">September</option>\r\n                                    <option value=\"Oct\">October</option>\r\n                                    <option value=\"Nov\">November</option>\r\n                                    <option value=\"Dec\">December</option>\r\n                                </select>\r\n                                <select id=\"year\" name=\"Year\" onChange={this.changeYearHandler}>\r\n                                    <option selected>Year</option>\r\n                                    <option value=\"2020\">2020</option>\r\n                                    <option value=\"2019\">2019</option>\r\n                                    <option value=\"2018\">2018</option>\r\n                                    <option value=\"2017\">2017</option>\r\n                                    <option value=\"2016\">2016</option>\r\n                                    <option value=\"2015\">2015</option>\r\n                                </select>\r\n                            </div>\r\n                            <error-output class=\"date-error\" htmlFor='startDate'>{this.state.error.dateError}</error-output>\r\n                        </div>\r\n                        <div class=\"row-content\">\r\n                            <label class=\"label text\" htmlFor=\"notes\">Notes</label>\r\n                            <textarea class=\"input\" id=\"notes\" style={{height:\"100px\"}} name=\"notes\"\r\n                                placeholder=\"\" onChange = {this.changeNoteHandler}></textarea>\r\n                                <error-output class=\"date-error\" htmlFor='notes'>{this.state.error.noteError}</error-output>\r\n                        </div>\r\n                        <div class=\"buttonParent\">\r\n                            <button class=\"resetButton button cancelButton\" onClick={this.cancel.bind(this)}>Cancel</button>\r\n                            <div class=\"submit-reset\">\r\n                                <button type=\"submit\" class=\"button submitButton\" id=\"submitButton\" onClick={this.saveEmployee}>Submit</button>\r\n                                <button type=\"reset\" class=\"resetButton button\" onClick={this.reset.bind(this)}>Reset</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddEmployeeComponent;","D:\\shiva\\PATTERN\\Employee_Payroll_React_App\\payroll_app\\src\\Components\\UpdateEmployeeComponent.jsx",["58","59","60","61","62"],"D:\\shiva\\PATTERN\\Employee_Payroll_React_App\\payroll_app\\src\\Services\\EmployeeService.js",[],"D:\\shiva\\PATTERN\\Employee_Payroll_React_App\\payroll_app\\src\\Services\\utility.js",[],"D:\\shiva\\PATTERN\\Employee_Payroll_React_App\\payroll_app\\src\\Components\\DepartmentComponent.jsx",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":12},{"ruleId":"67","severity":1,"message":"71","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":27},{"ruleId":"72","severity":1,"message":"73","line":82,"column":45,"nodeType":"74","endLine":82,"endColumn":138},{"ruleId":"75","severity":1,"message":"76","line":102,"column":75,"nodeType":"77","messageId":"78","endLine":102,"endColumn":77},{"ruleId":"75","severity":1,"message":"76","line":156,"column":75,"nodeType":"77","messageId":"78","endLine":156,"endColumn":77},{"ruleId":"75","severity":1,"message":"76","line":170,"column":41,"nodeType":"77","messageId":"78","endLine":170,"endColumn":43},{"ruleId":"75","severity":1,"message":"76","line":177,"column":28,"nodeType":"77","messageId":"78","endLine":177,"endColumn":30},{"ruleId":"75","severity":1,"message":"76","line":183,"column":27,"nodeType":"77","messageId":"78","endLine":183,"endColumn":29},{"ruleId":"75","severity":1,"message":"76","line":183,"column":56,"nodeType":"77","messageId":"78","endLine":183,"endColumn":58},{"ruleId":"75","severity":1,"message":"76","line":183,"column":86,"nodeType":"77","messageId":"78","endLine":183,"endColumn":88},{"ruleId":"75","severity":1,"message":"76","line":52,"column":81,"nodeType":"77","messageId":"78","endLine":52,"endColumn":83},{"ruleId":"75","severity":1,"message":"76","line":115,"column":75,"nodeType":"77","messageId":"78","endLine":115,"endColumn":77},{"ruleId":"75","severity":1,"message":"76","line":133,"column":75,"nodeType":"77","messageId":"78","endLine":133,"endColumn":77},{"ruleId":"75","severity":1,"message":"76","line":174,"column":125,"nodeType":"77","messageId":"78","endLine":174,"endColumn":127},{"ruleId":"75","severity":1,"message":"76","line":176,"column":129,"nodeType":"77","messageId":"78","endLine":176,"endColumn":131},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'DepartmentComponent' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]